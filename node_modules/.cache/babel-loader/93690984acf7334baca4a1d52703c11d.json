{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import Navbar from 'react-bootstrap/Navbar';\n// import Card from 'react-bootstrap/Card';\n// import ToDoForm from './form.js';\n// import ToDoList from './list.js';\n// import Footer from './footer.js';\n// import './todo.scss';\n// //====================My API========================\\\\\n// const todoAPI = 'https://jessi-api-server.herokuapp.com/todo'; \n// //====================Class API======================||\n// // const todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo';\n// const ToDo = () => {\n//   const [list, setList] = useState([]);\n//   const [item, setItem] = useState({});\n//   const [complete, setComplete] = useState('');\n//   const _addItem = (item) => {\n//     item.due = new Date();\n//     fetch(todoAPI, {\n//       method: 'post',\n//       // mode: 'no-cors',\n//       // cache: 'no-cache',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify(item)\n//     })\n//       .then(response => response.json())\n//       .then(savedItem => {\n//         setList([...list, savedItem])\n//       })\n//       .catch(console.error);\n//   };\n//   const deleteItem = (id) => {\n//     let item = list.filter(i => i._id === id)[0] || {};\n//     if (item._id) {\n//       fetch(`${todoAPI}/${id}`, {\n//         method: 'delete',\n//         body: JSON.stringify(item)\n//       })\n//         .then(response => response.json())\n//         .then(() => {\n//           let newList = list.filter(listItem => listItem._id !== id);\n//           setList(newList);\n//         })\n//         .catch(console.error);\n//     }\n//   }\n//   const updateItem = (id, val) => {\n//     let item = list.filter(i => i._id === id)[0] || {};\n//     if (item._id) {\n//       fetch(`${todoAPI}/${id}`, {\n//         method: 'put',\n//         body: JSON.stringify(val)\n//       })\n//         .then(response => response.json())\n//         .then(() => {\n//           item.text = val;\n//           let newList = list.map(listItem => listItem._id === item._id ? item : listItem);\n//           setList(newList);\n//         })\n//         .catch(console.error);\n//     }\n//   }\n//   const _toggleComplete = id => {\n//     let item = list.filter(i => i._id === id)[0] || {};\n//     if (item._id) {\n//       item.complete = !item.complete;\n//       let url = `${todoAPI}/${id}`;\n//       fetch(url, {\n//         method: 'put',\n//         // mode: 'cors',\n//         // cache: 'no-cache',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(item)\n//       })\n//         .then(response => response.json())\n//         .then(savedItem => {\n//           setList(list.map(listItem => listItem._id === item._id ? savedItem : listItem));\n//         })\n//         .catch(console.error);\n//     }\n//   };\n//   const _getTodoItems = () => {\n//     fetch(todoAPI, {\n//       method: 'get',\n//       // mode: 'cors',\n//     })\n//       .then(data => data.json())\n//       .then(data => setList(data))\n//       .catch(console.error);\n//   };\n//   useEffect(_getTodoItems, []);\n//   return (\n//     <>\n//       <Navbar bg=\"primary\" variant=\"dark\">\n//         <Navbar.Brand id=\"homeBlue\" href=\"#home\">Home</Navbar.Brand>\n//       </Navbar>\n//       <Navbar bg=\"dark\" variant=\"dark\" id=\"navBlack\">\n//         <Navbar.Brand>To Do List Manager ({list.filter(item => !item.complete).length} Tasks Pending)</Navbar.Brand>\n//       </Navbar>\n//       <div className=\"todo\">\n//         <ToDoForm addItem={_addItem} />\n//         <ToDoList\n//           id=\"list\"\n//           list={list}\n//           toggleComplete={_toggleComplete}\n//           deleteItem={deleteItem}\n//           updateItem={updateItem}\n//         />\n//       </div>\n//       <Footer></Footer>\n//     </>\n//   );\n// }\n// export default ToDo;","map":{"version":3,"sources":["/home/dana/my401/class31/todo-app/src/components/todo-connected.js"],"names":[],"mappingssourcesContent":["// import React, { useEffect, useState } from 'react';\n// import Navbar from 'react-bootstrap/Navbar';\n// import Card from 'react-bootstrap/Card';\n// import ToDoForm from './form.js';\n// import ToDoList from './list.js';\n// import Footer from './footer.js';\n\n// import './todo.scss';\n\n// //====================My API========================\\\\\n// const todoAPI = 'https://jessi-api-server.herokuapp.com/todo'; \n\n// //====================Class API======================||\n// // const todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo';\n\n\n\n// const ToDo = () => {\n\n//   const [list, setList] = useState([]);\n//   const [item, setItem] = useState({});\n//   const [complete, setComplete] = useState('');\n\n//   const _addItem = (item) => {\n//     item.due = new Date();\n//     fetch(todoAPI, {\n//       method: 'post',\n//       // mode: 'no-cors',\n//       // cache: 'no-cache',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify(item)\n//     })\n//       .then(response => response.json())\n//       .then(savedItem => {\n//         setList([...list, savedItem])\n//       })\n//       .catch(console.error);\n//   };\n\n//   const deleteItem = (id) => {\n//     let item = list.filter(i => i._id === id)[0] || {};\n//     if (item._id) {\n//       fetch(`${todoAPI}/${id}`, {\n//         method: 'delete',\n//         body: JSON.stringify(item)\n//       })\n//         .then(response => response.json())\n//         .then(() => {\n//           let newList = list.filter(listItem => listItem._id !== id);\n//           setList(newList);\n//         })\n//         .catch(console.error);\n//     }\n//   }\n\n//   const updateItem = (id, val) => {\n//     let item = list.filter(i => i._id === id)[0] || {};\n\n//     if (item._id) {\n//       fetch(`${todoAPI}/${id}`, {\n//         method: 'put',\n//         body: JSON.stringify(val)\n//       })\n//         .then(response => response.json())\n//         .then(() => {\n//           item.text = val;\n//           let newList = list.map(listItem => listItem._id === item._id ? item : listItem);\n//           setList(newList);\n//         })\n//         .catch(console.error);\n//     }\n//   }\n\n//   const _toggleComplete = id => {\n//     let item = list.filter(i => i._id === id)[0] || {};\n//     if (item._id) {\n//       item.complete = !item.complete;\n//       let url = `${todoAPI}/${id}`;\n//       fetch(url, {\n//         method: 'put',\n//         // mode: 'cors',\n//         // cache: 'no-cache',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(item)\n//       })\n//         .then(response => response.json())\n//         .then(savedItem => {\n//           setList(list.map(listItem => listItem._id === item._id ? savedItem : listItem));\n//         })\n//         .catch(console.error);\n//     }\n//   };\n\n//   const _getTodoItems = () => {\n//     fetch(todoAPI, {\n//       method: 'get',\n//       // mode: 'cors',\n//     })\n//       .then(data => data.json())\n//       .then(data => setList(data))\n//       .catch(console.error);\n//   };\n\n//   useEffect(_getTodoItems, []);\n\n//   return (\n//     <>\n//       <Navbar bg=\"primary\" variant=\"dark\">\n//         <Navbar.Brand id=\"homeBlue\" href=\"#home\">Home</Navbar.Brand>\n//       </Navbar>\n//       <Navbar bg=\"dark\" variant=\"dark\" id=\"navBlack\">\n//         <Navbar.Brand>To Do List Manager ({list.filter(item => !item.complete).length} Tasks Pending)</Navbar.Brand>\n//       </Navbar>\n//       <div className=\"todo\">\n//         <ToDoForm addItem={_addItem} />\n//         <ToDoList\n//           id=\"list\"\n//           list={list}\n//           toggleComplete={_toggleComplete}\n//           deleteItem={deleteItem}\n//           updateItem={updateItem}\n//         />\n//       </div>\n//       <Footer></Footer>\n//     </>\n//   );\n// }\n\n// export default ToDo;\n"]},"metadata":{},"sourceType":"module"}