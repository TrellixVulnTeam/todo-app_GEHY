{"ast":null,"code":"var _jsxFileName = \"/home/dana/my401/class31/todo-app/src/components/todo-connected.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Card from 'react-bootstrap/Card';\nimport ToDoForm from './form.js';\nimport ToDoList from './list.js';\nimport Footer from './footer.js';\nimport './todo.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo';\n\nconst ToDo = () => {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [item, setItem] = useState({});\n  const [complete, setComplete] = useState('');\n\n  const _addItem = item => {\n    item.due = new Date();\n    fetch(todoAPI, {\n      method: 'post',\n      // mode: 'no-cors',\n      // cache: 'no-cache',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    }).then(response => response.json()).then(savedItem => {\n      setList([...list, savedItem]);\n    }).catch(console.error);\n  };\n\n  const deleteItem = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      fetch(`${todoAPI}/${id}`, {\n        method: 'delete',\n        body: JSON.stringify(item)\n      }).then(response => response.json()).then(() => {\n        let newList = list.filter(listItem => listItem._id !== id);\n        setList(newList);\n      }).catch(console.error);\n    }\n  };\n\n  const updateItem = (id, val) => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      fetch(`${todoAPI}/${id}`, {\n        method: 'put',\n        body: JSON.stringify(val)\n      }).then(response => response.json()).then(() => {\n        item.text = val;\n        let newList = list.map(listItem => listItem._id === item._id ? item : listItem);\n        setList(newList);\n      }).catch(console.error);\n    }\n  };\n\n  const _toggleComplete = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let url = `${todoAPI}/${id}`;\n      fetch(url, {\n        method: 'put',\n        // mode: 'cors',\n        // cache: 'no-cache',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(item)\n      }).then(response => response.json()).then(savedItem => {\n        setList(list.map(listItem => listItem._id === item._id ? savedItem : listItem));\n      }).catch(console.error);\n    }\n  };\n\n  const _getTodoItems = () => {\n    fetch(todoAPI, {\n      method: 'get' // mode: 'cors',\n\n    }).then(data => data.json()).then(data => setList(data)).catch(console.error);\n  };\n\n  useEffect(_getTodoItems, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"primary\",\n      variant: \"dark\",\n      children: /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n        id: \"homeBlue\",\n        href: \"#home\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo\",\n      children: [/*#__PURE__*/_jsxDEV(ToDoForm, {\n        addItem: _addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n        id: \"list\",\n        list: list,\n        toggleComplete: _toggleComplete,\n        deleteItem: deleteItem,\n        updateItem: updateItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ToDo, \"3F474w6dMGHOXo8aZwe1iHhCSR8=\");\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/home/dana/my401/class31/todo-app/src/components/todo-connected.js"],"names":["React","useEffect","useState","Navbar","Card","ToDoForm","ToDoList","Footer","todoAPI","ToDo","list","setList","item","setItem","complete","setComplete","_addItem","due","Date","fetch","method","headers","body","JSON","stringify","then","response","json","savedItem","catch","console","error","deleteItem","id","filter","i","_id","newList","listItem","updateItem","val","text","map","_toggleComplete","url","_getTodoItems","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Card from 'react-bootstrap/Card';\nimport ToDoForm from './form.js';\nimport ToDoList from './list.js';\nimport Footer from './footer.js';\n\nimport './todo.scss';\n\n const todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo';\n\n\n\nconst ToDo = () => {\n\n  const [list, setList] = useState([]);\n  const [item, setItem] = useState({});\n  const [complete, setComplete] = useState('');\n\n  const _addItem = (item) => {\n    item.due = new Date();\n    fetch(todoAPI, {\n      method: 'post',\n      // mode: 'no-cors',\n      // cache: 'no-cache',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(item)\n    })\n      .then(response => response.json())\n      .then(savedItem => {\n        setList([...list, savedItem])\n      })\n      .catch(console.error);\n  };\n\n  const deleteItem = (id) => {\n    let item = list.filter(i => i._id === id)[0] || {};\n    if (item._id) {\n      fetch(`${todoAPI}/${id}`, {\n        method: 'delete',\n        body: JSON.stringify(item)\n      })\n        .then(response => response.json())\n        .then(() => {\n          let newList = list.filter(listItem => listItem._id !== id);\n          setList(newList);\n        })\n        .catch(console.error);\n    }\n  }\n\n  const updateItem = (id, val) => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      fetch(`${todoAPI}/${id}`, {\n        method: 'put',\n        body: JSON.stringify(val)\n      })\n        .then(response => response.json())\n        .then(() => {\n          item.text = val;\n          let newList = list.map(listItem => listItem._id === item._id ? item : listItem);\n          setList(newList);\n        })\n        .catch(console.error);\n    }\n  }\n\n  const _toggleComplete = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n    if (item._id) {\n      item.complete = !item.complete;\n      let url = `${todoAPI}/${id}`;\n      fetch(url, {\n        method: 'put',\n        // mode: 'cors',\n        // cache: 'no-cache',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(item)\n      })\n        .then(response => response.json())\n        .then(savedItem => {\n          setList(list.map(listItem => listItem._id === item._id ? savedItem : listItem));\n        })\n        .catch(console.error);\n    }\n  };\n\n  const _getTodoItems = () => {\n    fetch(todoAPI, {\n      method: 'get',\n      // mode: 'cors',\n    })\n      .then(data => data.json())\n      .then(data => setList(data))\n      .catch(console.error);\n  };\n\n  useEffect(_getTodoItems, []);\n\n  return (\n    <>\n      <Navbar bg=\"primary\" variant=\"dark\">\n        <Navbar.Brand id=\"homeBlue\" href=\"#home\">Home</Navbar.Brand>\n      </Navbar>\n      {/* <Navbar bg=\"dark\" variant=\"dark\" id=\"navBlack\">\n        <Navbar.Brand>To Do List Manager ({list.filter(item => !item.complete).length} Tasks Pending)</Navbar.Brand>\n      </Navbar> */}\n      <div className=\"todo\">\n        <ToDoForm addItem={_addItem} />\n        <ToDoList\n          id=\"list\"\n          list={list}\n          toggleComplete={_toggleComplete}\n          deleteItem={deleteItem}\n          updateItem={updateItem}\n        />\n      </div>\n      <Footer></Footer>\n    </>\n  );\n}\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}