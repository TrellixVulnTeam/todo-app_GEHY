{"ast":null,"code":"var _jsxFileName = \"/home/dana/my401/class31/todo-app/src/components/todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ToDoForm from './form.js';\nimport ToDoList from './list.js';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Card from 'react-bootstrap/Card';\nimport useHook from '../hooks/formHooks.js';\nimport './todo.scss';\nimport Header from './';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ToDo() {\n  _s();\n\n  const [list, setList] = useState([]);\n\n  const addItem = item => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]);\n  };\n\n  const deleteItem = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      let newList = list.filter(listItem => listItem._id !== id);\n      setList(newList);\n    }\n  };\n\n  const updateItem = (id, val) => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.text = val;\n      let newList = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(newList);\n    }\n  };\n\n  const toggleComplete = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let newList = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(newList);\n    }\n  };\n\n  useEffect(() => {\n    if (list.length >= 1) document.title = `${list.filter(item => !item.complete).length} Items To Complete`;\n  }, [list]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"dark\",\n      variant: \"dark\",\n      id: \"navBlack\",\n      children: /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n        children: [\"To Do List Manager (\", list.filter(item => !item.complete).length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"todo\",\n      children: [/*#__PURE__*/_jsxDEV(ToDoForm, {\n        addItem: addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n        list: list,\n        toggleComplete: toggleComplete,\n        deleteItem: deleteItem,\n        updateItem: updateItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ToDo, \"ZBNfaudzy8bVxb8UgkyyMnLdlWY=\");\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/home/dana/my401/class31/todo-app/src/components/todo.js"],"names":["React","useEffect","useState","ToDoForm","ToDoList","Navbar","Card","useHook","Header","ToDo","list","setList","addItem","item","_id","Math","random","complete","deleteItem","id","filter","i","newList","listItem","updateItem","val","text","map","toggleComplete","length","document","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ToDoForm from './form.js';\nimport ToDoList from './list.js';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Card from 'react-bootstrap/Card';\nimport useHook from '../hooks/formHooks.js';\nimport './todo.scss';\n\nimport Header from './'\n\n\nfunction ToDo() {\n\n  const [list, setList] = useState([]);\n\n  const addItem = (item) => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]);\n  };\n\n  const deleteItem = (id) => {\n    let item = list.filter(i => i._id === id)[0] || {};\n    if (item._id) {\n      let newList = list.filter(listItem => listItem._id !== id);\n      setList(newList);\n    }\n  }\n\n  const updateItem = (id, val) => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.text = val;\n      let newList = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(newList);\n    }\n  }\n\n  const toggleComplete = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n    if (item._id) {\n      item.complete = !item.complete;\n      let newList = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(newList);\n    }\n  };\n\n\n \n  useEffect(() => {\n    if(list.length >= 1) (document.title = `${list.filter(item => !item.complete).length} Items To Complete`)\n  }, [list]);\n\n  return (\n    <>\n    <Header/>\n      <Navbar bg=\"dark\" variant=\"dark\" id=\"navBlack\">\n        <Navbar.Brand>To Do List Manager ({list.filter(item => !item.complete).length})</Navbar.Brand>\n      </Navbar>\n\n      <Card className=\"todo\">\n        <ToDoForm addItem={addItem} />\n        <ToDoList\n          list={list}\n          toggleComplete={toggleComplete}\n          deleteItem={deleteItem}\n          updateItem={updateItem}\n        />\n      </Card>\n    </>\n  );\n}\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}