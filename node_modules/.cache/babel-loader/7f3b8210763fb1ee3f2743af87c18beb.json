{"ast":null,"code":"var _jsxFileName = \"/home/dana/my401/class31/todo-app/src/components/list.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { When } from 'react-if';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Toast from 'react-bootstrap/Toast';\nimport Badge from 'react-bootstrap/Badge';\nimport Card from 'react-bootstrap/Card';\nimport useHook from '../hooks/formHooks.js';\nimport { FormControl } from 'react-bootstrap';\nimport { SettingsContext } from '../context/setting.js';\nimport Pagination from './pagination.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ToDoList(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const settingsContext = useContext(SettingsContext);\n  const [value, setValue] = useState('');\n  const [id, setId] = useState('');\n  const [update, setUpdate] = useState(false);\n  const [handleSubmit, values] = useHook(updateList);\n  const [complete, setComplete] = useState('');\n  const [currentPage, setCurrentPage] = useState('1');\n\n  const toggleUpdate = id => {\n    setUpdate(!update);\n    setId(id);\n  };\n\n  function updateList(todo) {\n    setValue(todo);\n    props.updateItem(id, value);\n  }\n\n  let activeLest = props.list;\n\n  if (settingsContext.hideComplete) {\n    activeLest = props.list.filter(item => !item.complete);\n  }\n\n  const indexOfLastItem = currentPage * settingsContext.itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - settingsContext.itemsPerPage;\n  activeLest = activeLest.slice(indexOfFirstItem, indexOfLastItem);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  function SettingForm() {\n    _s();\n\n    const context = useContext(SettingsContext);\n    const [items, setItems] = useState(context.itemsPerPage);\n\n    const handleItems = e => {\n      e.preventDefault();\n      context.setItemPerPage(Number(e.target.items.value));\n      localStorage.setItem(\"ItemPerPage\", Number(e.target.items.value));\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleItems,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"items\",\n          onChange: e => {\n            setItems(e.target.value);\n          },\n          value: items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Items Displayed Per Page(number):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this);\n  }\n\n  _s(SettingForm, \"ONmMzphQybXoC/bI194I0TwQYZw=\");\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(If, {\n      condition: flag,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: editor,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          children: /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Edit Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 4\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 4\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 4\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"warning\",\n          type: \"submit\",\n          children: \"Submit Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), currentTasks.map(item => /*#__PURE__*/_jsxDEV(Toast, {\n      style: {\n        minWidth: '200px',\n        maxWidth: '50%'\n      } // onClose={() => props.deleteItem(item._id)} value={item._id}\n      ,\n      onClose: () => authContext.user.capabilities.includes('delete') ? props.deleteItem(item._id) : false,\n      value: item._id,\n      children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Badge, {\n          pill: true,\n          variant: item.complete ? 'danger' : 'success',\n          children: [\" \", item.complete ? 'completed' : 'pending', \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"mr-auto ml-4\",\n          children: [\"  \", item.assignee, \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n        onClick: () => authContext.user.capabilities.includes('update') ? props.handleComplete(item._id) : false,\n        style: {\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: `ml-3 ${item.complete ? 'text-muted text-decoration-line-through' : ''}`,\n          children: item.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"float-right\",\n          style: {\n            fontSize: '90%'\n          },\n          children: [\"Difficulty: \", item.difficulty]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Acl, {\n          capability: \"update\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"warning\",\n            onClick: () => toggle(item._id),\n            value: item._id,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 10\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 8\n      }, this)]\n    }, item._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 6\n    }, this)), /*#__PURE__*/_jsxDEV(Pagination, {\n      children: [/*#__PURE__*/_jsxDEV(Pagination.Prev, {\n        disabled: active === 1 ? true : false,\n        onClick: () => {\n          setCurrentPage(currentPage - 1);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 10\n      }, this), items, /*#__PURE__*/_jsxDEV(Pagination.Next, {\n        disabled: active > numOfPages - 1 ? true : false,\n        onClick: () => {\n          setCurrentPage(currentPage + 1);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(ToDoList, \"jcPKSrrPECsHdG/8eu6e3tkODpk=\", false, function () {\n  return [useHook];\n});\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["/home/dana/my401/class31/todo-app/src/components/list.js"],"names":["React","useEffect","useState","useContext","When","ListGroup","Button","Form","Toast","Badge","Card","useHook","FormControl","SettingsContext","Pagination","ToDoList","props","settingsContext","value","setValue","id","setId","update","setUpdate","handleSubmit","values","updateList","complete","setComplete","currentPage","setCurrentPage","toggleUpdate","todo","updateItem","activeLest","list","hideComplete","filter","item","indexOfLastItem","itemsPerPage","indexOfFirstItem","slice","paginate","pageNumber","SettingForm","context","items","setItems","handleItems","e","preventDefault","setItemPerPage","Number","target","localStorage","setItem","flag","editor","currentTasks","map","minWidth","maxWidth","authContext","user","capabilities","includes","deleteItem","_id","assignee","handleComplete","cursor","text","fontSize","difficulty","toggle","active","numOfPages"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { When } from 'react-if';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Toast from 'react-bootstrap/Toast';\nimport Badge from 'react-bootstrap/Badge';\nimport Card from 'react-bootstrap/Card';\nimport useHook from '../hooks/formHooks.js';\nimport { FormControl } from 'react-bootstrap';\nimport { SettingsContext } from '../context/setting.js';\nimport Pagination from './pagination.js';\n\n\n\nfunction ToDoList(props) {\n  const settingsContext = useContext(SettingsContext);\n  const [value, setValue] = useState('');\n  const [id, setId] = useState('');\n  const [update, setUpdate] = useState(false);\n  const [handleSubmit, values] = useHook(updateList);\n  const [complete, setComplete] = useState('');\n  const [currentPage, setCurrentPage] = useState('1');\n\n  const toggleUpdate = (id) => {\n    setUpdate(!update);\n    setId(id);\n  }\n\n  function updateList(todo) {\n    setValue(todo); \n    props.updateItem(id, value)\n  }\n\n  let activeLest = props.list;\n\n\n\n\n  if (settingsContext.hideComplete) {\n    activeLest = props.list.filter(item => !item.complete);\n  }\n\n\n  const indexOfLastItem = currentPage * settingsContext.itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - settingsContext.itemsPerPage;\n  activeLest = activeLest.slice(indexOfFirstItem, indexOfLastItem); \n\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\nfunction SettingForm() {\n  const context = useContext(SettingsContext);\n  const [items, setItems] = useState(context.itemsPerPage);\n\n  const handleItems = (e) => {\n    e.preventDefault();\n\n    context.setItemPerPage(Number(e.target.items.value));\n    localStorage.setItem(\"ItemPerPage\" , Number(e.target.items.value))\n  };\n  return (\n    <div>\n      <form onSubmit={handleItems}   >\n        <input\n          name=\"items\"\n          onChange={(e) => {\n            setItems(e.target.value);\n          }}\n          value={items}\n        ></input>\n        <button type=\"submit\">Items Displayed Per Page(number):</button>\n      </form>\n    </div>\n  );\n}\n  return (\n    <>\n    <If condition={flag}>\n   <Form onSubmit= {editor}>\n   <Form.Group controlId=\"formBasicEmail\">\n   <Form.Label>\n   <span>Edit Task</span>\n   <Form.Control  type=\"text\" name=\"text\"   />\n   </Form.Label>\n   </Form.Group>\n \n   <  Button variant=\"warning\" type=\"submit\" >Submit Edit</Button>\n   </Form>\n</If>\n     {currentTasks.map(item => (\n     <Toast  \n     key={item._id}\n     style={{ minWidth: '200px',maxWidth:'50%' }}\n     // onClose={() => props.deleteItem(item._id)} value={item._id}\n     onClose={() =>authContext.user.capabilities.includes('delete')? props.deleteItem(item._id) : false} value={item._id}\n\n     >\n        <Toast.Header>\n        <Badge pill variant={item.complete ? 'danger' : 'success'} > {item.complete ? 'completed' : 'pending'} </Badge>{' '}\n     \n         <strong className=\"mr-auto ml-4\" >  {item.assignee}  </strong>\n       \n         \n       </Toast.Header>\n\n       <Toast.Body onClick={() =>authContext.user.capabilities.includes('update')? props.handleComplete(item._id) : false} style={{ cursor: 'pointer' }}>\n         <h3 className={`ml-3 ${item.complete ? 'text-muted text-decoration-line-through' : ''}`}>{item.text}</h3>\n         <br />\n         <p className=\"float-right\" style={{ fontSize: '90%' }}>\n           Difficulty: {item.difficulty}\n         </p>\n         <br />\n         <Acl capability=\"update\">\n         <Button variant=\"warning\" onClick={()=>toggle(item._id)} value={item._id}>Edit</Button>{' '}\n         </Acl>\n       </Toast.Body>\n        \n     \n       </Toast>\n     ))}\n  <Pagination>\n         <Pagination.Prev\n           disabled={active === 1 ? true : false}\n           onClick={() => {\n             setCurrentPage(currentPage - 1);\n           }}\n         />\n         {items}\n         <Pagination.Next\n           disabled={active > numOfPages - 1 ? true : false}\n           onClick={() => {\n             setCurrentPage(currentPage + 1);\n           }}\n         />\n       </Pagination>\n  \n\n</>\n   );\n}\n\nexport default ToDoList;\n"]},"metadata":{},"sourceType":"module"}