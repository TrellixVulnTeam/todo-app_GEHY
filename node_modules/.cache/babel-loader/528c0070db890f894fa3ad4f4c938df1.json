{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState } from 'react';\nlet todoAPI = 'https://api-js401.herokuapp.com/';\n\nconst useAjax = () => {\n  _s();\n\n  const [list, setList] = useState([]);\n\n  const _addItem = item => {\n    item.due = new Date();\n\n    const fetch = () => {\n      axios.post(todoAPI, item, {\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(item)\n      }).then(response => {\n        setList([...list, response.data]);\n      }).catch(console.error);\n    };\n\n    fetch();\n  };\n\n  const _toggleComplete = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      const url2 = `${todoAPI}/${item._id}`;\n\n      const fetch = async () => {\n        // axiosApi ('put' , url2 , item)\n        axios.put(url2, item, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          data: JSON.stringify(item),\n          cache: 'no-cache',\n          mode: 'cors'\n        }).then(response => setList(list.map(listItem => listItem._id === item._id ? response.data : listItem))).catch(console.error);\n      };\n\n      fetch();\n    }\n  };\n\n  const _getTodoItems = () => {\n    const fetch = async () => {\n      let response = await axios.get(todoAPI, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        cache: 'no-cache',\n        mode: 'cors'\n      });\n      setList(response.data.results);\n    };\n\n    fetch();\n  };\n\n  const editor = (text, id) => {\n    let item = list.filter(item => item._id === id)[0] || {};\n\n    if (item) {\n      item.text = text;\n      list.map(itm => {\n        if (itm._id === id) {\n          return item;\n        } else {\n          return itm;\n        }\n      });\n      const url2 = `${todoAPI}/${item._id}`;\n\n      const fetch = async () => {\n        axios.put(url2, item, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          cache: 'no-cache',\n          mode: 'cors',\n          body: JSON.stringify(item)\n        }).then(response => setList(list.map(listItem => listItem._id === item._id ? response.data : listItem))).catch(console.error);\n      };\n\n      fetch();\n    }\n  };\n\n  const deleteItem = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n    const url2 = `${todoAPI}/${item._id}`;\n\n    const fetch = async () => {\n      axios.delete(url2, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        cache: 'no-cache',\n        mode: 'cors'\n      }).then(response => setList(list.filter(item => item._id !== response.data.id) || {}));\n    };\n\n    fetch();\n  };\n\n  return [list, _getTodoItems, _toggleComplete, _addItem, deleteItem, editor];\n};\n\n_s(useAjax, \"lKdQXMrTIgeSucryXQCfMwILyd4=\");\n\nexport default useAjax;","map":{"version":3,"sources":["/home/dana/my401/class31/todo-app/src/hooks/useAjax.js"],"names":["axios","useState","todoAPI","useAjax","list","setList","_addItem","item","due","Date","fetch","post","mode","cache","headers","body","JSON","stringify","then","response","data","catch","console","error","_toggleComplete","id","filter","i","_id","complete","url2","put","map","listItem","_getTodoItems","get","results","editor","text","itm","deleteItem","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport { useState } from 'react';\nlet  todoAPI = 'https://api-js401.herokuapp.com/';\nconst useAjax = () => {\n    const [list , setList] = useState ([]);\n    \n\n\n\n  const _addItem = (item) => {\n    item.due = new Date();\n    const fetch = ()=>{\n        \n        axios.post (todoAPI,item,{\n            mode: 'cors',\n            cache: 'no-cache',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(item)\n              \n            })\n            \n                .then(response => {\n                  setList([...list, response.data])\n                })\n                .catch(console.error);\n        \n    }\n\n    fetch ();\n  }\n\n\n\n  const _toggleComplete = (id)=>{\n\n    let item = list.filter(i => i._id === id)[0] || {};\n    if (item._id) {\n        item.complete = !item.complete;\n        const url2 = `${todoAPI}/${item._id}`\n        const fetch = async ()=>{\n            // axiosApi ('put' , url2 , item)\n            axios.put (url2,item,{\n                headers: { 'Content-Type': 'application/json' },\n                data: JSON.stringify(item),\n                cache:'no-cache',\n                mode: 'cors',\n                  \n                })\n            .then (response =>setList ( list.map(listItem => listItem._id === item._id ? response.data : listItem)))\n            .catch(console.error);\n            \n        }\n        \n        fetch ();\n    }\n    \n  }\n\n    const _getTodoItems = ()=>{\n        const fetch = async ()=>{\n            let response = await  axios.get (todoAPI,{\n                headers: { 'Content-Type': 'application/json' },\n                cache:'no-cache',\n                mode: 'cors',\n                  \n                })\n            setList (response.data.results)\n        }\n        fetch ();\n     \n    }\n\n    const editor = (text , id)=>{\n      let item = list.filter ((item)=> item._id === id)[0] || {}\n  \n      if (item) {\n        item.text = text;\n        list.map (itm =>{\n          if (itm._id === id ){\n            return item \n          }else {\n            return itm\n          }\n        })\n      const url2 = `${todoAPI}/${item._id}`\n      const fetch = async ()=>{\n        axios.put (url2,item ,{\n            headers: { 'Content-Type': 'application/json' },\n            cache:'no-cache',\n            mode: 'cors',\n            body: JSON.stringify(item)\n              \n            }).then (response =>setList ( list.map(listItem => listItem._id === item._id ? response.data : listItem)))\n            .catch(console.error);\n        \n    }\n    fetch ();\n  \n      }\n     \n    }\n\n\n    const deleteItem =(id)=>{\n\n        let item = list.filter(i => i._id === id)[0] || {};\n        const url2 = `${todoAPI}/${item._id}`\n        const fetch = async ()=>{\n            axios.delete (url2,{\n                headers: { 'Content-Type': 'application/json' },\n                cache:'no-cache',\n                mode: 'cors',\n                  \n                }).then ((response)=>setList ( list.filter((item)=>item._id !== response.data.id) || {}))\n            \n        }\n        fetch ();\n    \n      }\n\n\n    return [list,_getTodoItems , _toggleComplete,_addItem ,deleteItem,editor];\n\n}\n\nexport default useAjax;"]},"metadata":{},"sourceType":"module"}