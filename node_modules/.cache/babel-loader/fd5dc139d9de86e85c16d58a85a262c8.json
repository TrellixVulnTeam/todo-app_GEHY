{"ast":null,"code":"var _jsxFileName = \"/home/dana/my401/class31/todo-app/src/components/todo/list.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useContext } from 'react';\nimport { SettingsContext } from '../../context/setting';\nimport { useState, useEffect } from 'react';\nimport { Button, Card, Elevation } from '@blueprintjs/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction List(props) {\n  _s();\n\n  const context = useContext(SettingsContext);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [activeList, setActiveList] = useState(props.list.slice(0, context.itemsPerPage));\n  const [numOfPages, setNumOfPages] = useState(Math.ceil(props.list.length / context.itemsPerPage)); //============sorting==================\\\\\n\n  if (context.sortField === 'assignee') {\n    currentList.sort((a, b) => {\n      if (a.assignee.toLowerCase() > b.assignee.toLowerCase()) return 1;\n      if (a.assignee.toLowerCase() < b.assignee.toLowerCase()) return -1;\n      return 0;\n    });\n  } else if (context.sortField === 'difficulty') {\n    currentList.sort((a, b) => {\n      return a.difficulty - b.difficulty;\n    });\n  } else if (context.sortField === 'task') {\n    currentList.sort((a, b) => {\n      if (a.text.toLowerCase() > b.text.toLowerCase()) return 1;\n      if (a.text.toLowerCase() < b.text.toLowerCase()) return -1;\n      return 0;\n    });\n  }\n\n  useEffect(() => {\n    setActiveList(props.list.slice(0, context.itemsPerPage));\n    setNumOfPages(Math.ceil(props.list.length / context.itemsPerPage));\n  }, [props.list, context.itemsPerPage]);\n  useEffect(() => {\n    const start = (currentPage - 1) * context.itemsPerPage;\n    const end = start + context.itemsPerPage;\n    setActiveList(props.list.slice(start, end));\n  }, [currentPage, context.itemsPerPage, props.list]);\n\n  const PagesList = () => {\n    const pages = [];\n    if (currentPage > 1) pages.push( /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        changePage(currentPage - 1);\n      },\n      children: \"Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this));\n\n    for (let index = 0; index < numOfPages; index++) {\n      pages.push( /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          changePage(index);\n        },\n        children: index\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (currentPage < numOfPages) pages.push( /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        changePage(currentPage + 1);\n      },\n      children: \"next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this));\n    return pages;\n  }; ///////////////////////////show\n\n\n  if (context.hideComplete) {\n    useEffect(() => {\n      setActiveList(props.list.filter(item => !item.complete));\n    }, [props.list, context.itemsPerPage, context.hideComplete]);\n  }\n\n  const changePage = pageNumber => {\n    if (pageNumber == currentPage) return;\n    setCurrentPage(pageNumber);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: context.hideComplete === true ? 'success' : 'secondary',\n      onClick: () => context.setHideComplete(!context.hideComplete),\n      children: context.hideComplete === true ? `Show Completed Tasks` : `Hide Completed Tasks`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), activeList.map(item => /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Assigned to: \", item.assignee]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Difficulty: \", item.difficulty]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => props.toggleComplete(item.id),\n        children: [\"Complete: \", item.complete.toString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(PagesList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(List, \"MZFnnqSzuROQ7pTAxdZrZtEc/4s=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/dana/my401/class31/todo-app/src/components/todo/list.js"],"names":["React","useContext","SettingsContext","useState","useEffect","Button","Card","Elevation","List","props","context","currentPage","setCurrentPage","activeList","setActiveList","list","slice","itemsPerPage","numOfPages","setNumOfPages","Math","ceil","length","sortField","currentList","sort","a","b","assignee","toLowerCase","difficulty","text","start","end","PagesList","pages","push","changePage","index","hideComplete","filter","item","complete","pageNumber","setHideComplete","map","toggleComplete","id","toString"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useContext } from 'react';\nimport { SettingsContext } from '../../context/setting';\nimport { useState, useEffect } from 'react';\nimport { Button, Card, Elevation } from '@blueprintjs/core';\n\nfunction List(props) {\n  const context = useContext(SettingsContext);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [activeList, setActiveList] = useState(\n    props.list.slice(0, context.itemsPerPage)\n  );\n  const [numOfPages, setNumOfPages] = useState(\n    Math.ceil(props.list.length / context.itemsPerPage)\n  );\n  //============sorting==================\\\\\n  if (context.sortField === 'assignee') {\n    currentList.sort((a, b) => {\n      if (a.assignee.toLowerCase() > b.assignee.toLowerCase()) return 1;\n      if (a.assignee.toLowerCase() < b.assignee.toLowerCase()) return -1;\n      return 0;\n    });\n  }\n  else if (context.sortField === 'difficulty') {\n    currentList.sort((a, b) => {\n      return a.difficulty - b.difficulty;\n    });\n  }\n  else if (context.sortField === 'task') {\n    currentList.sort((a, b) => {\n      if (a.text.toLowerCase() > b.text.toLowerCase()) return 1;\n      if (a.text.toLowerCase() < b.text.toLowerCase()) return -1;\n      return 0;\n    });\n  }\n  useEffect(() => {\n    setActiveList(props.list.slice(0, context.itemsPerPage));\n    setNumOfPages(Math.ceil(props.list.length / context.itemsPerPage));\n  }, [props.list, context.itemsPerPage]);\n\n  useEffect(() => {\n    const start = (currentPage - 1) * context.itemsPerPage;\n    const end = start + context.itemsPerPage;\n    setActiveList(props.list.slice(start, end));\n  }, [currentPage, context.itemsPerPage, props.list]);\n\n\n  const PagesList = () => {\n    const pages = [];\n    if (currentPage > 1)\n      pages.push(\n        <Button\n          onClick={() => {\n            changePage(currentPage - 1);\n          }}\n        >\n          Prev\n        </Button>\n      );\n\n    for (let index = 0; index < numOfPages; index++) {\n      pages.push(\n        <Button\n          onClick={() => {\n            changePage(index);\n          }}\n          key={index}\n        >\n          {index}\n        </Button>\n      );\n    }\n\n    if (currentPage < numOfPages)\n      pages.push(\n        <Button\n          onClick={() => {\n            changePage(currentPage + 1);\n          }}\n        >\n          next\n        </Button>\n      );\n    return pages;\n  };\n\n\n\n\n ///////////////////////////show\n  if (context.hideComplete) {\n    useEffect(() => {\n    setActiveList(props.list.filter(item => !item.complete));\n  },[props.list, context.itemsPerPage ,context.hideComplete]);}\n\n\n\n\n\n  const changePage = (pageNumber) => {\n    if (pageNumber == currentPage) return;\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <>\n      <Button\n           \n            variant={context.hideComplete === true ? 'success' : 'secondary'}\n            onClick={() => context.setHideComplete(!context.hideComplete)}>\n              {context.hideComplete === true ? `Show Completed Tasks` : `Hide Completed Tasks`}\n          </Button>\n  \n      {activeList.map((item) => (\n        <Card key={item.id}>\n          <p>{item.text}</p>\n          <p>\n            <small>Assigned to: {item.assignee}</small>\n          </p>\n          <p>\n            <small>Difficulty: {item.difficulty}</small>\n          </p>\n          <div onClick={() => props.toggleComplete(item.id)}>\n            Complete: {item.complete.toString()}\n          </div>\n          <hr />\n        </Card>\n      ))}\n      <PagesList />\n    </>\n  );\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}